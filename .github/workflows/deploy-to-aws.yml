name: Deploy to AWS EKS

# Trigger the workflow on commits to the 'gene-pages' branch
on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Test AWS credentials
        run: |
          aws sts get-caller-identity
    
      - name: Print AWS Region
        run: |
          echo "AWS_REGION=${AWS_REGION}"
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Debug ECR Registry Output
        run: |
          echo "ECR Registry: ${{ steps.ecr-login.outputs.registry }}"  

      - name: Build, tag, and push Docker image
        run: |
          cd ./react-app
          IMAGE_NAME=morphic-dev-website
          IMAGE_TAG=gatsby-site-$(date +%Y%m%d%H%M%S)
          ECR_URI=${{ steps.ecr-login.outputs.registry }}/${IMAGE_NAME}

          # Build the Docker image
          docker build -t $IMAGE_NAME .

          # Tag the Docker image
          docker tag $IMAGE_NAME:latest $ECR_URI:$IMAGE_TAG

          # Push the Docker image to ECR
          docker push $ECR_URI:$IMAGE_TAG

          # Save the image URI for later steps
          echo "image=$ECR_URI:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name morphic-dev-cluster-1 --region ${{ secrets.AWS_REGION }}

      - name: Update Kubernetes deployment
        run: |
          kubectl set image deployment/morphic-dev-website morphic-dev-website=$image --namespace=morphic-dev
          kubectl rollout status deployment/morphic-dev-website --namespace=morphic-dev
